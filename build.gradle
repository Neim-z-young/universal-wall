plugins {
    id 'java'
    id 'war'
    id "org.hidetake.ssh" version "2.10.1"  //ssh
    id "org.gretty" version "2.3.1"  //debug
}

group 'com.freeLearn'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.11
targetCompatibility = 1.11

remotes {
    webServer {
        host = '123.207.230.153'
        user = 'ubuntu'
        identity = file('C:\\Users\\13408\\.ssh\\oyoungy')
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

repositories {
    maven { url  'http://maven.aliyun.com/nexus/content/repositories/central/'}
    maven { url 'http://maven.springframework.org/release' }
    maven { url 'http://maven.springframework.org/milestone' }
    maven { url 'http://maven.springframework.org/snapshot' }
//    maven { url 'http://download.java.net/maven/2' }
    mavenCentral()
}

dependencies {
    compile "org.springframework:spring-webmvc:$springVersion"
    compile "org.springframework:spring-jdbc:$springVersion"
    compile "org.springframework.security:spring-security-config:$springSecurityVersion"
    compile "org.springframework.security:spring-security-web:$springSecurityVersion"
    compile "org.springframework.data:spring-data-jpa:$springDataJpaVersion"
    compile "com.h2database:h2:$h2Version"
    compile "org.hibernate:hibernate-validator:$hibernateValidatorVersion"
    compile "org.apache.commons:commons-lang3:$commonsLangVersion"
    compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    compile "com.github.pagehelper:pagehelper:$pagehelperVersion"

    //javaee api
    compile "javax.xml.bind:jaxb-api:$jaxbVersion"
    compile "com.sun.xml.bind:jaxb-core:$jaxbVersion"
    compile "com.sun.xml.bind:jaxb-impl:$jaxbVersion"
    compile "javax.activation:activation:$activationVersion"

    compile "org.slf4j:slf4j-api:$slf4jVersion"
//    compile "org.slf4j:jcl-over-slf4j:$slf4jVersion"
//    compile "org.slf4j:slf4j-log4j12:$slf4jVersion"
//    compile "log4j:log4j:$log4jVersion"
    compile "org.apache.logging.log4j:log4j-api:$log4j2Version"
    compile "org.apache.logging.log4j:log4j-core:$log4j2Version"
    compile "org.apache.logging.log4j:log4j-slf4j-impl:$log4j2Version"
    compile "org.apache.logging.log4j:log4j-jcl:$log4j2Version"
    compile "org.apache.logging.log4j:log4j-jul:$log4j2Version"

    //lombok (gradle 4.7 后,lombok依赖导入已发生改变)
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"
    compileOnly "org.projectlombok:lombok:$lombokVersion"
    
    //dbcp driver
    compile "commons-dbcp:commons-dbcp:$dbcpVersion"
    
    //mybatis
    compile "org.mybatis:mybatis:$mybatisVersion"
    compile "org.mybatis:mybatis-spring:$mybatisSpringVersion"
    //模型生成器
    compile "org.mybatis.generator:mybatis-generator-core:$mybatisGeneratorVersion"
    
    //mysql driver
    compile "mysql:mysql-connector-java:$mysqlConnectorJavaVersion"
    
    //JWT
    compile "io.jsonwebtoken:jjwt:$jjwtVersion"

    //hutool
    compile "cn.hutool:hutool-all:$hutoolAllVersion"

    //swagger-ui
    compile "io.springfox:springfox-swagger2:$swaggerVersion"
    compile "io.springfox:springfox-swagger-ui:$swaggerVersion"

    compile "javax.servlet:jstl:$jstlVersion"
    providedCompile "javax.servlet:javax.servlet-api:$servletApiVersion"
    providedCompile "javax.servlet.jsp:jsp-api:$jspApiVersion"
    providedCompile "javax.el:javax.el-api:$jspElVersion"

    testCompile "junit:junit-dep:$junitVersion"
    testCompile "org.springframework:spring-test:$springVersion"
    testCompile "org.mockito:mockito-core:$mockitoVersion"
    testCompile "org.hamcrest:hamcrest-library:$hamcrestVersion"

    //lombok 测试依赖
    testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"
    testCompileOnly "org.projectlombok:lombok:$lombokVersion"
}

wrapper{
    gradleVersion = '5.4'
}

war {
    archiveName 'wall.war'
}

task deploy {
    doLast {
        ssh.run {
            session(remotes.webServer) {
                println 'Copy war package...'+buildDir.toString() + '/libs/wall.war'
                put from: buildDir.toString() + '/libs/wall.war', into: '/usr/local/apache-tomcat9/webapps'
                //execute 'sudo service tomcat restart'
                println 'Copied'
                println 'try to depackage and chmod....'
                sleep(15000)
                println 'chmod to 755...'
                execute 'sudo chmod -R 755 /usr/local/apache-tomcat9/webapps/wall'
                println 'changed successed'
            }
        }
    }
}

task chmod {
    doLast {
        ssh.run {
            session(remotes.webServer) {
                println 'chmod to 755...'
                execute 'sudo chmod -R 755 /usr/local/apache-tomcat9/webapps/wall'
                println 'changed successed'
            }
        }
    }
}

task startTomcat {
    doLast {
        ssh.run {
            session(remotes.webServer) {
                println 'starting...'
                execute 'sudo sh /usr/local/apache-tomcat9/bin/startup.sh'
                println 'started'
            }
        }
    }
}

task shutdownTomcat {
    doLast {
        ssh.run {
            session(remotes.webServer) {
                println 'stopping...'
                execute 'sudo sh /usr/local/apache-tomcat9/bin/shutdown.sh'
                println 'stopped'
            }
        }
    }
}
